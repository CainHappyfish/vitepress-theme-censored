"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.count = exports.countCharacters = exports.countLines = exports.countWords = void 0;
const emojiPattern_1 = __importDefault(require("./emojiPattern"));
const cjkPattern = "\\p{Script=Han}|\\p{Script=Kana}|\\p{Script=Hira}|\\p{Script=Hangul}";
const PatternString = {
    emoji: emojiPattern_1.default,
    cjk: cjkPattern,
    word: `((?!${cjkPattern})[\\p{Alphabetic}\\p{Decimal_Number}\\p{Connector_Punctuation}\\p{Join_Control}])+`,
    number: "(?:[\\p{Decimal_Number}](?:\\.?\\p{Decimal_Number})+)",
};
const wordPattern = new RegExp(`${PatternString.emoji}|${PatternString.cjk}|${PatternString.number}|${PatternString.word}`, "gu");
const characterPattern = new RegExp(`${PatternString.emoji}|\\S`, "ug");
const characterPatternWithSpace = new RegExp(`${PatternString.emoji}|.`, "ug");
const countWords = (text) => {
    var _a, _b;
    return (_b = (_a = text.normalize().match(wordPattern)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;
};
exports.countWords = countWords;
const countLines = (text) => {
    var _a;
    return (_a = text.split("\n").length) !== null && _a !== void 0 ? _a : 0;
};
exports.countLines = countLines;
const countCharacters = (text, withSpace = false) => {
    var _a, _b;
    return ((_b = (_a = text
        .normalize()
        .match(withSpace ? characterPatternWithSpace : characterPattern)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0);
};
exports.countCharacters = countCharacters;
const count = (text) => {
    return {
        words: (0, exports.countWords)(text),
        lines: (0, exports.countLines)(text),
        characters: (0, exports.countCharacters)(text),
        charactersWithSpaces: (0, exports.countCharacters)(text, true),
    };
};
exports.count = count;
